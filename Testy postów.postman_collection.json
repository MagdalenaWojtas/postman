{
	"info": {
		"_postman_id": "f443d169-c846-4ea7-b60e-9b997eb3b132",
		"name": "Testy postów",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35944984"
	},
	"item": [
		{
			"name": "Pobieranie wszystkich postów",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check title\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].title).to.eql(\"json-server2\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check author\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].author).to.contain(\"typicode\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{host}}:3000/posts",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pobieranie wybranego posta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check title\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"json-server\");\r",
							"});\r",
							"pm.test(\"Check author\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"typicode\");\r",
							"});\r",
							"pm.test(\"Check author 2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.author).to.eql(\"typicode\");\r",
							"});\r",
							"pm.test(\"Check title1 2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"json-server\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(\"1\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{host}}:3000/posts/1",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Filtrowanie postów",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{host}}:3000/posts?title=json-server2",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"posts"
					],
					"query": [
						{
							"key": "title",
							"value": "json-server2"
						},
						{
							"key": "author",
							"value": "typicode",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Dodawanie posta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Check author\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.author).to.eql(pm.environment.get(\"randomName\"));\r",
							"});\r",
							"pm.test(\"Check title\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(pm.globals.get(\"title\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.environment.set(\"randomName\", pm.variables.replaceIn('{{$randomFullName}}'));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"id\": \"6\",\r\n        \"title\": \"{{title}}\",\r\n        \"author\": \"{{randomName}}\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:3000/posts",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dodawanie posta Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.environment.set(\"randomName\", pm.variables.replaceIn(\"{{$randomFullName}}\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Check title\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(pm.globals.get(\"title\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Check author\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.author).to.eql(pm.environment.get(\"randomName\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"id\": \"6\",\r\n        \"title\": \"{{title}}\",\r\n        \"author\": \"{{randomName}}\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:3000/posts",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Aktualizacja posta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"id\": \"3\",\r\n        \"title\": \"json-server35\",\r\n        \"author\": \"typicode3\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:3000/posts/3",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"posts",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Aktualizacja części posta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"title\": \"json-server39\",\r\n        \"author\": \"typicode3\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:3000/posts/3",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"posts",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dodawanie posta do usunięcia",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Check author\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.author).to.eql(pm.environment.get(\"randomName\"));\r",
							"});\r",
							"pm.test(\"Check title\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(pm.globals.get(\"title\"));\r",
							"});\r",
							"\r",
							"\r",
							"pm.globals.set(\"postIdToDelate\", pm.response.json() .id);\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.environment.set(\"randomName\", pm.variables.replaceIn('{{$randomFullName}}'));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"title\": \"{{title}}\",\r\n        \"author\": \"{{randomName}}\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:3000/posts",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuwanie posta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{host}}:3000/posts/{{postIdToDelate}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "3000",
					"path": [
						"posts",
						"{{postIdToDelate}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.test(\"Successful request code\", function () {\r",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
					"});\r",
					"\r",
					"\r",
					""
				]
			}
		}
	]
}